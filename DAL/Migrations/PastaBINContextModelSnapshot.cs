// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(PastaBINContext))]
    partial class PastaBINContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Cook", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Cook");
                });

            modelBuilder.Entity("Model.PastaHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDPastaInfo")
                        .HasColumnType("int")
                        .HasColumnName("PastaInfoID");

                    b.Property<int>("IDUser")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("IDPastaInfo");

                    b.HasIndex("IDUser");

                    b.ToTable("PastaHistory");
                });

            modelBuilder.Entity("Model.PastaImg", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDPastaInfo")
                        .HasColumnType("int")
                        .HasColumnName("PastaInfoID");

                    b.Property<byte[]>("Img")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDPastaInfo");

                    b.ToTable("PastaImg");
                });

            modelBuilder.Entity("Model.PastaInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDUser")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("IDUser");

                    b.ToTable("PastaInfo");
                });

            modelBuilder.Entity("Model.PastaSharingSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("EndSharingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPastaInfo")
                        .HasColumnType("int")
                        .HasColumnName("PastaInfoID");

                    b.Property<int>("IDUser")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ID");

                    b.HasIndex("IDPastaInfo");

                    b.HasIndex("IDUser");

                    b.ToTable("PastaSharingSettings");
                });

            modelBuilder.Entity("Model.PastaText", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDPastaInfo")
                        .HasColumnType("int")
                        .HasColumnName("PastaInfoID");

                    b.Property<string>("Pasta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IDPastaInfo");

                    b.ToTable("PastaText");
                });

            modelBuilder.Entity("Model.PastaHistory", b =>
                {
                    b.HasOne("Model.PastaInfo", "PastaInfo")
                        .WithMany("PastaHistories")
                        .HasForeignKey("IDPastaInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Cook", "User")
                        .WithMany("PastaHistories")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.PastaImg", b =>
                {
                    b.HasOne("Model.PastaInfo", "PastaInfo")
                        .WithMany("PastaImgs")
                        .HasForeignKey("IDPastaInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaInfo");
                });

            modelBuilder.Entity("Model.PastaInfo", b =>
                {
                    b.HasOne("Model.Cook", "Cook")
                        .WithMany("PastaInfos")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cook");
                });

            modelBuilder.Entity("Model.PastaSharingSettings", b =>
                {
                    b.HasOne("Model.PastaInfo", "PastaInfo")
                        .WithMany("PastaSharingSettings")
                        .HasForeignKey("IDPastaInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Cook", "User")
                        .WithMany("PastaSharingSettings")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PastaInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Model.PastaText", b =>
                {
                    b.HasOne("Model.PastaInfo", "PastaInfo")
                        .WithMany("PastaTexts")
                        .HasForeignKey("IDPastaInfo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaInfo");
                });

            modelBuilder.Entity("Model.Cook", b =>
                {
                    b.Navigation("PastaHistories");

                    b.Navigation("PastaInfos");

                    b.Navigation("PastaSharingSettings");
                });

            modelBuilder.Entity("Model.PastaInfo", b =>
                {
                    b.Navigation("PastaHistories");

                    b.Navigation("PastaImgs");

                    b.Navigation("PastaSharingSettings");

                    b.Navigation("PastaTexts");
                });
#pragma warning restore 612, 618
        }
    }
}
