// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(PastaBINContext))]
    [Migration("20240630194838_test2")]
    partial class test2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Cook", b =>
                {
                    b.Property<int>("CookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CookID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CookID");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Cooks");
                });

            modelBuilder.Entity("Model.PastaBind", b =>
                {
                    b.Property<int>("PastaBindID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PastaBindID"));

                    b.Property<int?>("CookID")
                        .HasColumnType("int");

                    b.Property<string>("GlobalKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ImgID")
                        .HasColumnType("int");

                    b.Property<int?>("TxtID")
                        .HasColumnType("int");

                    b.HasKey("PastaBindID");

                    b.HasIndex("CookID");

                    b.HasIndex("GlobalKey")
                        .IsUnique();

                    b.ToTable("PastaBinds");
                });

            modelBuilder.Entity("Model.PastaGroupSharing", b =>
                {
                    b.Property<int>("GroupSharingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupSharingID"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndSharingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PastaBindID")
                        .HasColumnType("int");

                    b.HasKey("GroupSharingID");

                    b.HasIndex("GroupKey")
                        .IsUnique();

                    b.HasIndex("PastaBindID");

                    b.ToTable("PastaGroupSharing");
                });

            modelBuilder.Entity("Model.PastaHistory", b =>
                {
                    b.Property<int>("HistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryID"));

                    b.Property<int?>("CookID")
                        .HasColumnType("int");

                    b.Property<int>("PastaBindID")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HistoryID");

                    b.HasIndex("CookID");

                    b.HasIndex("PastaBindID");

                    b.ToTable("PastaHistory");
                });

            modelBuilder.Entity("Model.PastaImage", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PastaBindID")
                        .HasColumnType("int");

                    b.HasKey("ImageID");

                    b.HasIndex("PastaBindID")
                        .IsUnique();

                    b.ToTable("PastaImage");
                });

            modelBuilder.Entity("Model.PastaSharingSettings", b =>
                {
                    b.Property<int>("SharingSettingsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SharingSettingsID"));

                    b.Property<int>("CookID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndSharingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PastaBindID")
                        .HasColumnType("int");

                    b.HasKey("SharingSettingsID");

                    b.HasIndex("CookID");

                    b.HasIndex("PastaBindID");

                    b.ToTable("PastaSharingSettings");
                });

            modelBuilder.Entity("Model.PastaTxt", b =>
                {
                    b.Property<int>("PastaTxtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PastaTxtID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("PastaBindID")
                        .HasColumnType("int");

                    b.HasKey("PastaTxtID");

                    b.HasIndex("PastaBindID")
                        .IsUnique();

                    b.ToTable("PastaTxt");
                });

            modelBuilder.Entity("Model.PastaBind", b =>
                {
                    b.HasOne("Model.Cook", "Cook")
                        .WithMany("PastaBinds")
                        .HasForeignKey("CookID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Cook");
                });

            modelBuilder.Entity("Model.PastaGroupSharing", b =>
                {
                    b.HasOne("Model.PastaBind", "PastaBind")
                        .WithMany("GroupSharing")
                        .HasForeignKey("PastaBindID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaBind");
                });

            modelBuilder.Entity("Model.PastaHistory", b =>
                {
                    b.HasOne("Model.Cook", "Cook")
                        .WithMany("Histories")
                        .HasForeignKey("CookID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Model.PastaBind", "PastaBind")
                        .WithMany("Histories")
                        .HasForeignKey("PastaBindID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cook");

                    b.Navigation("PastaBind");
                });

            modelBuilder.Entity("Model.PastaImage", b =>
                {
                    b.HasOne("Model.PastaBind", "PastaBind")
                        .WithOne("Image")
                        .HasForeignKey("Model.PastaImage", "PastaBindID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaBind");
                });

            modelBuilder.Entity("Model.PastaSharingSettings", b =>
                {
                    b.HasOne("Model.Cook", "Cook")
                        .WithMany("SharingSettings")
                        .HasForeignKey("CookID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.PastaBind", "PastaBind")
                        .WithMany("SharingSettings")
                        .HasForeignKey("PastaBindID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cook");

                    b.Navigation("PastaBind");
                });

            modelBuilder.Entity("Model.PastaTxt", b =>
                {
                    b.HasOne("Model.PastaBind", "PastaBind")
                        .WithOne("Txt")
                        .HasForeignKey("Model.PastaTxt", "PastaBindID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PastaBind");
                });

            modelBuilder.Entity("Model.Cook", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("PastaBinds");

                    b.Navigation("SharingSettings");
                });

            modelBuilder.Entity("Model.PastaBind", b =>
                {
                    b.Navigation("GroupSharing");

                    b.Navigation("Histories");

                    b.Navigation("Image");

                    b.Navigation("SharingSettings");

                    b.Navigation("Txt");
                });
#pragma warning restore 612, 618
        }
    }
}
